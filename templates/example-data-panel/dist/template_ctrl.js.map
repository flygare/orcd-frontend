{"version":3,"sources":["../src/template_ctrl.js"],"names":["MetricsPanelCtrl","_","TemplateCtrl","$scope","$injector","$rootScope","panelDefaults","legend","show","values","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","legendType","aliasColors","format","valueName","strokeWidth","fontSize","combine","threshold","label","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","series","render","dataList","header","target","datapoints","data","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,sB,kBAAAA,gB;;AACDC,O;;;;;;;;;;;;;;;;;;;;;8BAGMC,Y;;;AACX,8BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAAA;;AAAA,kIACnCF,MADmC,EAC3BC,SAD2B;;AAEzC,gBAAKC,UAAL,GAAkBA,UAAlB;;AAEA,cAAIC,gBAAgB;AAClBC,oBAAQ;AACNC,oBAAM,IADA,EACM;AACZC,sBAAQ;AAFF,aADU;AAKlBC,mBAAO,EALW;AAMlBC,wBAAY,IANM;AAOlBC,2BAAe,CAPG;AAQlBC,sBAAU,IARQ;AASlBC,qBAAS,CAAC,EAAD,CATS;AAUlBC,0BAAc,IAVI;AAWlBC,2BAAe,WAXG;AAYlBC,wBAAY,aAZM;AAalBC,yBAAa,EAbK;AAclBC,oBAAQ,OAdU;AAelBC,uBAAW,SAfO;AAgBlBC,yBAAa,CAhBK;AAiBlBC,sBAAU,KAjBQ;AAkBnBC,qBAAS;AACPC,yBAAW,GADJ;AAEPC,qBAAO;AAFA;AAlBU,WAApB;;AAwBAxB,YAAEyB,QAAF,CAAW,MAAKC,KAAhB,EAAuBrB,aAAvB;AACAL,YAAEyB,QAAF,CAAW,MAAKC,KAAL,CAAWpB,MAAtB,EAA8BD,cAAcC,MAA5C;;AAEA,gBAAKqB,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,MAAKC,QAAL,CAAcC,IAAd,OAAzB;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKG,cAAL,CAAoBD,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA6B,MAAKI,WAAL,CAAiBF,IAAjB,OAA7B;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKG,cAAL,CAAoBD,IAApB,OAArC;AACA;AAnCyC;AAoC1C;;;;wCAEa;AACZ,iBAAKG,MAAL,GAAc,EAAd;AACA,iBAAKC,MAAL;AACD;;;yCAEcC,Q,EAAU;AACvB;AACA,iBAAKC,MAAL,GAAcD,SAAS,CAAT,EAAYE,MAA1B;AACA,iBAAKC,UAAL,GAAkBH,SAAS,CAAT,EAAYG,UAA9B;AACD;;;qCAEU;AACT,iBAAKC,IAAL,GAAY,QAAZ;AACD;;;;QApD+BxC,gB;;;;AAuDlCE,mBAAauC,WAAb,GAA0B,aAA1B","file":"template_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport './css/template-panel.css!';\n\nexport class TemplateCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n\n    var panelDefaults = {\n      legend: {\n        show: true, // disable/enable legend\n        values: true\n      },\n      links: [],\n      datasource: null,\n      maxDataPoints: 3,\n      interval: null,\n      targets: [{}],\n      cacheTimeout: null,\n      nullPointMode: 'connected',\n      legendType: 'Under graph',\n      aliasColors: {},\n      format: 'short',\n      valueName: 'current',\n      strokeWidth: 1,\n      fontSize: '80%',\n  \t  combine: {\n  \t    threshold: 0.0,\n  \t    label: 'Others'\n  \t  }\n    };\n\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel.legend, panelDefaults.legend);\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    //this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    //Might contain multiple targets in array.\n    this.header = dataList[0].target;\n    this.datapoints = dataList[0].datapoints;\n  }\n\n  onRender() {\n    this.data = \"Render\";\n  }\n}\n\nTemplateCtrl.templateUrl ='module.html';\n"]}