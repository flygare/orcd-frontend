{"version":3,"sources":["../src/template_ctrl.js"],"names":["MetricsPanelCtrl","d3","_","TemplateCtrl","$scope","$injector","$rootScope","panelDefaults","legend","show","values","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","legendType","aliasColors","format","valueName","strokeWidth","fontSize","combine","threshold","label","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","series","render","dataList","header","target","datapoints","selectAll","remove","svg","select","data","enter","append","attr","d","console","log","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,sB,kBAAAA,gB;;AACIC,Q;;AACLC,O;;;;;;;;;;;;;;;;;;;;;8BAIMC,Y;;;AACX,8BAAaC,MAAb,EAAqBC,SAArB,EAAgCC,UAAhC,EAA4C;AAAA;;AAAA,kIACpCF,MADoC,EAC5BC,SAD4B;;AAE1C,gBAAKC,UAAL,GAAkBA,UAAlB;;AAEA,cAAIC,gBAAgB;AAClBC,oBAAQ;AACNC,oBAAM,IADA,EACM;AACZC,sBAAQ;AAFF,aADU;AAKlBC,mBAAO,EALW;AAMlBC,wBAAY,IANM;AAOlBC,2BAAe,CAPG;AAQlBC,sBAAU,IARQ;AASlBC,qBAAS,CAAC,EAAD,CATS;AAUlBC,0BAAc,IAVI;AAWlBC,2BAAe,WAXG;AAYlBC,wBAAY,aAZM;AAalBC,yBAAa,EAbK;AAclBC,oBAAQ,OAdU;AAelBC,uBAAW,SAfO;AAgBlBC,yBAAa,CAhBK;AAiBlBC,sBAAU,KAjBQ;AAkBlBC,qBAAS;AACPC,yBAAW,GADJ;AAEPC,qBAAO;AAFA;AAlBS,WAApB;;AAwBAxB,YAAEyB,QAAF,CAAW,MAAKC,KAAhB,EAAuBrB,aAAvB;AACAL,YAAEyB,QAAF,CAAW,MAAKC,KAAL,CAAWpB,MAAtB,EAA8BD,cAAcC,MAA5C;;AAEA,gBAAKqB,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,MAAKC,QAAL,CAAcC,IAAd,OAAzB;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKG,cAAL,CAAoBD,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA6B,MAAKI,WAAL,CAAiBF,IAAjB,OAA7B;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKG,cAAL,CAAoBD,IAApB,OAArC;AACA;AAnC0C;AAoC3C;;;;wCAEc;AACb,iBAAKG,MAAL,GAAc,EAAd;AACA,iBAAKC,MAAL;AACD;;;yCAEeC,Q,EAAU;AACxB;AACA,iBAAKC,MAAL,GAAcD,SAAS,CAAT,EAAYE,MAA1B;AACA,iBAAKC,UAAL,GAAkBH,SAAS,CAAT,EAAYG,UAA9B;;AAEAvC,eAAGwC,SAAH,CAAa,KAAb,EAAoBC,MAApB;;AAEA,gBAAIC,MAAM1C,GAAG2C,MAAH,CAAU,OAAV,EACPH,SADO,CACG,KADH,EAEPI,IAFO,CAEFR,SAAS,CAAT,EAAYG,UAFV,EAGPM,KAHO,GAIPC,MAJO,CAIA,KAJA,EAKPC,IALO,CAKF,OALE,EAKO,UAAUC,CAAV,EAAa;AAC1B,qBAAOA,EAAE,CAAF,IAAO,EAAd;AACD,aAPO,EAQPD,IARO,CAQF,QARE,EAQQ,UAAUC,CAAV,EAAa;AAC3B,qBAAOA,EAAE,CAAF,IAAO,EAAd;AACD,aAVO,CAAV;;AAYAN,gBAAII,MAAJ,CAAW,QAAX,EACGC,IADH,CACQ,IADR,EACc,UAAUC,CAAV,EAAa;AACvB,qBAAOA,EAAE,CAAF,IAAO,EAAd;AACD,aAHH,EAIGD,IAJH,CAIQ,IAJR,EAIc,UAAUC,CAAV,EAAa;AACvB,qBAAOA,EAAE,CAAF,IAAO,EAAd;AACD,aANH,EAOGD,IAPH,CAOQ,GAPR,EAOa,UAAUC,CAAV,EAAa;AACtB,qBAAOA,EAAE,CAAF,IAAO,EAAd;AACD,aATH;AAUD;;;qCAEW;AACV;AACAC,oBAAQC,GAAR,CAAY,YAAZ;AACD;;;;QA9E+BnD,gB;;;;AAiFlCG,mBAAaiD,WAAb,GAA2B,aAA3B","file":"template_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport * as d3 from './node_modules/d3/build/d3';\nimport _ from 'lodash';\nimport './css/template-panel.css!';\nimport './css/d3.css!';\n\nexport class TemplateCtrl extends MetricsPanelCtrl {\n  constructor ($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n\n    var panelDefaults = {\n      legend: {\n        show: true, // disable/enable legend\n        values: true\n      },\n      links: [],\n      datasource: null,\n      maxDataPoints: 3,\n      interval: null,\n      targets: [{}],\n      cacheTimeout: null,\n      nullPointMode: 'connected',\n      legendType: 'Under graph',\n      aliasColors: {},\n      format: 'short',\n      valueName: 'current',\n      strokeWidth: 1,\n      fontSize: '80%',\n      combine: {\n        threshold: 0.0,\n        label: 'Others'\n      }\n    };\n\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel.legend, panelDefaults.legend);\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    // this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onDataError () {\n    this.series = [];\n    this.render();\n  }\n\n  onDataReceived (dataList) {\n    // Might contain multiple targets in array.\n    this.header = dataList[0].target;\n    this.datapoints = dataList[0].datapoints;\n\n    d3.selectAll('svg').remove();\n\n    var svg = d3.select('.dots')\n      .selectAll('svg')\n      .data(dataList[0].datapoints)\n      .enter()\n      .append('svg')\n      .attr('width', function (d) {\n        return d[0] / 10;\n      })\n      .attr('height', function (d) {\n        return d[0] / 10;\n      });\n\n    svg.append('circle')\n      .attr('cy', function (d) {\n        return d[0] / 20;\n      })\n      .attr('cx', function (d) {\n        return d[0] / 20;\n      })\n      .attr('r', function (d) {\n        return d[0] / 20;\n      });\n  }\n\n  onRender () {\n    // When is this used?\n    console.log('onRender()');\n  }\n}\n\nTemplateCtrl.templateUrl = 'module.html';\n"]}